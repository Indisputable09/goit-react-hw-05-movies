{"version":3,"file":"static/js/271.cc1cfc88.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/pages/Cast/Cast.jsx","components/pages/MovieDetails/MovieDetails.jsx","components/services/getMoviesAndInfo.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n        <div className=\"Loader\">\n            <ThreeDots\n                height=\"80\"\n                width=\"80\"\n                radius=\"9\"\n                color='blue'\n                ariaLabel='three-dots-loading'\n            />\n        </div>\n    )\n};\n\nexport default Loader;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getCast } from \"components/services/getMoviesAndInfo\";\nimport { IMG_PATH } from \"../MovieDetails/MovieDetails\";\n\nconst NO_IMAGE = 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png'\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n\n    const { movieId } = useParams();\n    useEffect(() => {\n        (async function getCastInfo() {\n            const castInfo = await getCast(movieId);\n            setCast(castInfo);\n        })();\n    }, [movieId]);\n    \n    return (\n        <ul>\n            {cast.map(({ id, name, profile_path, character }) => {\n                return (\n                    <li key={id}>\n                        <img src={profile_path ? IMG_PATH + profile_path : NO_IMAGE} alt={name} loading='lazy' />\n                        <p>{name}</p>\n                        <p>Character: {character}</p>\n                    </li>\n                )\n            })}\n        </ul>\n    );\n};\n\nexport default Cast;","import { useParams, Link, Outlet, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { getMovieById, getGenres } from \"components/services/getMoviesAndInfo\";\nimport Loader from \"components/Loader\";\n\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/movies\";\n\n\n    const [movie, setMovie] = useState({});\n    const [genres, setGenres] = useState('');\n    useEffect(() => {\n        async function getMovie() {\n            try {\n                const movie = await getMovieById(movieId);\n                const genres = await getGenres(movie.genre_ids);\n                setMovie(movie);\n                setGenres(genres);\n            } catch (error) {\n                console.log(error)\n            }\n        };\n        getMovie()\n    }, [movieId]);\n\n    const { backdrop_path, title, release_date, vote_average, overview } = movie;\n    const MOVIE_AVAILABLE = Object.keys(movie).length > 0;\n    \n    return (\n        <>\n            {MOVIE_AVAILABLE ? <>\n                <Link to={backLinkHref}>Back to movies</Link>\n                <div className=\"info\">\n                    <div className=\"img\">\n                        <img src={IMG_PATH + backdrop_path} alt={title} />\n                    </div>\n                    <div className=\"main-info\">\n                        <h2>{title} ({release_date.slice(0, 4)})</h2>\n                        <p>Vote - {Math.round(vote_average * 10) / 10}</p>\n                        <h3>Overview</h3>\n                        <p>{overview}</p>\n                        <h3>Genres</h3>\n                        <p>{genres.length === 0 ? 'No genres for this movie' : genres}</p>\n                    </div>\n                </div>\n                <div className=\"additional-info\">\n                    <h3>Additional information</h3>\n                    <ul>\n                        <Link to='cast'>Cast</Link>\n                        <Link to='reviews'>Reviews</Link>\n                    </ul>\n                    <Outlet />\n                </div>\n            </> : <>\n                <Loader/>\n                <b>Sorry, there are no details for the movie.</b>\n                <Link to='/'>Go home</Link></>}\n        </>\n    );\n};\n\nexport default MovieDetails;","import axios from 'axios';\nconst API_KEY = '6d25a4756e0ff1ccca3eba13a74efa5c';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'day';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nexport const fetchTrendingToday = async () => {\n  try {\n    const response = await axios.get(`trending/${MEDIA_TYPE}/${TIME_WINDOW}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const ID = Number(movieId);\n    const response = await axios.get(`movie/${ID}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getGenres = async (genres = []) => {\n  try {\n    const response = await axios.get(`genre/${MEDIA_TYPE}/list`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    const genreArray = response.data.genres;\n    const genreResult = genreArray.reduce((previousValue, element) => {\n      if (genres.includes(element.id)) {\n        previousValue.push(element.name);\n      }\n      return previousValue;\n    }, []);\n    return genreResult.join(', ');\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieBySearch = async query => {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["className","height","width","radius","color","ariaLabel","useState","cast","setCast","movieId","useParams","useEffect","getCast","castInfo","map","id","name","profile_path","character","src","IMG_PATH","alt","loading","backLinkHref","useLocation","state","from","movie","setMovie","genres","setGenres","getMovieById","getGenres","genre_ids","console","log","getMovie","backdrop_path","title","release_date","vote_average","overview","MOVIE_AVAILABLE","Object","keys","length","to","slice","Math","round","API_KEY","MEDIA_TYPE","axios","fetchTrendingToday","params","api_key","response","data","results","ID","Number","genreArray","genreResult","reduce","previousValue","element","includes","push","join","getReviews","getMovieBySearch","query"],"sourceRoot":""}