{"version":3,"file":"static/js/866.58364326.chunk.js","mappings":"gRA6BA,EAzBa,WACT,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MASjB,OAPAC,EAAAA,EAAAA,YAAU,YACN,mCAAC,qGAC0BC,EAAAA,EAAAA,MAD1B,OACSC,EADT,OAEGL,EAAUK,GAFb,2CAAD,sDAIH,GAAE,KAGC,iCACI,4CACA,wBACKN,EAAOO,KAAI,YAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,MACd,OACI,yBAAa,SAAC,KAAD,CAAMC,GAAE,iBAAYF,GAAMG,MAAO,CAAEC,KAAMV,GAAzC,SAAsDO,KAA1DD,EAEhB,QAIhB,C,oOC1BKK,EAAU,mCACVC,EAAa,QAGnBC,IAAAA,SAAAA,QAAA,gCAEO,IAAMV,EAAkB,mCAAG,6GAEPU,IAAAA,IAAA,mBAAsBD,EAAtB,YANP,OAM0D,CACxEE,OAAQ,CACNC,QAASJ,KAJiB,cAExBP,EAFwB,yBAOvBA,EAASY,KAAKC,SAPS,gCAS9BC,QAAQC,IAAR,MAT8B,yDAAH,qDAalBC,EAAY,mCAAG,WAAMC,GAAN,yFAElBC,EAAKC,OAAOF,GAFM,SAGDR,IAAAA,IAAA,gBAAmBS,GAAM,CAC9CR,OAAQ,CACNC,QAASJ,KALW,cAGlBP,EAHkB,yBAQjBA,EAASY,MARQ,gCAUxBE,QAAQC,IAAR,MAVwB,yDAAH,sDAcZK,EAAS,mCAAG,6GAAOC,EAAP,+BAAgB,GAAhB,kBAEEZ,IAAAA,IAAA,gBAAmBD,EAAnB,SAAsC,CAC3DE,OAAQ,CACNC,QAASJ,KAJQ,cAEfP,EAFe,OAOfsB,EAAatB,EAASY,KAAKS,OAC3BE,EAAcD,EAAWE,QAAO,SAACC,EAAeC,GAIpD,OAHIL,EAAOM,SAASD,EAAQxB,KAC1BuB,EAAcG,KAAKF,EAAQG,MAEtBJ,CACR,GAAE,IAbkB,kBAcdF,EAAYO,KAAK,OAdH,kCAgBrBhB,QAAQC,IAAR,MAhBqB,0DAAH,qDAoBTgB,EAAO,mCAAG,WAAM7B,GAAN,gGAEIO,IAAAA,IAAA,gBAAmBP,EAAnB,YAAiC,CACtDQ,OAAQ,CACNC,QAASJ,KAJM,cAEbP,EAFa,yBAOZA,EAASY,KAAKoB,MAPF,gCASnBlB,QAAQC,IAAR,MATmB,yDAAH,sDAaPkB,EAAU,mCAAG,WAAM/B,GAAN,gGAECO,IAAAA,IAAA,gBAAmBP,EAAnB,YAAiC,CACtDQ,OAAQ,CACNC,QAASJ,KAJS,cAEhBP,EAFgB,yBAOfA,EAASY,KAAKC,SAPC,gCAStBC,QAAQC,IAAR,MATsB,yDAAH,sDAaVmB,EAAgB,mCAAG,WAAMC,GAAN,gGAEL1B,IAAAA,IAAA,eAA0B,CAC/CC,OAAQ,CACNC,QAASJ,EACT4B,MAAAA,KALwB,cAEtBnC,EAFsB,yBAQrBA,EAASY,KAAKC,SARO,gCAU5BC,QAAQC,IAAR,MAV4B,yDAAH,qD","sources":["components/pages/Home/Home.jsx","components/services/getMoviesAndInfo.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { fetchTrendingToday } from \"components/services/getMoviesAndInfo\";\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    const location = useLocation();\n\n    useEffect(() => {\n        (async function getMovies() {\n            const response = await fetchTrendingToday();\n            setMovies(response);\n        })();\n    }, []);\n\n    return (\n        <>\n            <h2>Trending today</h2>\n            <ul>\n                {movies.map(({id, title}) => {\n                    return (\n                        <li key={id}><Link to={`movies/${id}`} state={{ from: location }}>{title}</Link></li>\n                    )\n                })}\n            </ul>\n        </>\n    )\n};\n\nexport default Home;","import axios from 'axios';\nconst API_KEY = '6d25a4756e0ff1ccca3eba13a74efa5c';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'day';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nexport const fetchTrendingToday = async () => {\n  try {\n    const response = await axios.get(`trending/${MEDIA_TYPE}/${TIME_WINDOW}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const ID = Number(movieId);\n    const response = await axios.get(`movie/${ID}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getGenres = async (genres = []) => {\n  try {\n    const response = await axios.get(`genre/${MEDIA_TYPE}/list`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    const genreArray = response.data.genres;\n    const genreResult = genreArray.reduce((previousValue, element) => {\n      if (genres.includes(element.id)) {\n        previousValue.push(element.name);\n      }\n      return previousValue;\n    }, []);\n    return genreResult.join(', ');\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieBySearch = async query => {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["useState","movies","setMovies","location","useLocation","useEffect","fetchTrendingToday","response","map","id","title","to","state","from","API_KEY","MEDIA_TYPE","axios","params","api_key","data","results","console","log","getMovieById","movieId","ID","Number","getGenres","genres","genreArray","genreResult","reduce","previousValue","element","includes","push","name","join","getCast","cast","getReviews","getMovieBySearch","query"],"sourceRoot":""}