{"version":3,"file":"static/js/271.f3272d84.chunk.js","mappings":"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","sources":["components/pages/Cast/Cast.jsx","components/pages/MovieDetails/MovieDetails.jsx","components/services/getMoviesAndInfo.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getCast } from \"components/services/getMoviesAndInfo\";\nimport { IMG_PATH } from \"../MovieDetails/MovieDetails\";\n\nconst NO_IMAGE = 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png'\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n\n    const { movieId } = useParams();\n    useEffect(() => {\n        (async function getCastInfo() {\n            const castInfo = await getCast(movieId);\n            setCast(castInfo);\n        })();\n    }, [movieId])\n    \n    console.log(cast)\n    return (\n        <ul>\n            {cast.map(({ id, name, profile_path, character }) => {\n                return (\n                    <li key={id}>\n                        <img src={profile_path ? IMG_PATH + profile_path : NO_IMAGE} alt={name} loading='lazy' />\n                        <p>{name}</p>\n                        <p>Character: {character}</p>\n                    </li>\n                )\n            })}\n        </ul>\n    );\n};\n\nexport default Cast;","import { useParams, Link, Outlet } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { getMovieById, getGenres } from \"components/services/getMoviesAndInfo\";\n\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n\n    const [movie, setMovie] = useState({});\n    const [genres, setGenres] = useState('');\n\n    useEffect(() => {\n        async function getMovie() {\n            try {\n                const movie = await getMovieById(movieId);\n                const genres = await getGenres(movie.genre_ids);\n                setMovie(movie);\n                setGenres(genres);\n            } catch (error) {\n                console.log(error)\n            }\n        };\n        getMovie()\n    }, [movieId]);\n    \n    const { backdrop_path, title, release_date, vote_average, overview } = movie;\n    \n    return (\n        <>\n            {Object.keys(movie).length > 0 ? <>\n                <div className=\"info\">\n                    <div className=\"img\">\n                        <img src={IMG_PATH + backdrop_path} alt={title} />\n                    </div>\n                    <div className=\"main-info\">\n                        <h2>{title} ({release_date.slice(0, 4)})</h2>\n                        <p>Vote - {Math.round(vote_average * 10) / 10}</p>\n                        <h3>Overview</h3>\n                        <p>{overview}</p>\n                        <h3>Genres</h3>\n                        <p>{genres.length === 0 ? 'No genres for this movie' : genres}</p>\n                    </div>\n                </div>\n                <div className=\"additional-info\">\n                    <h3>Additional information</h3>\n                    <ul>\n                        <Link to='cast'>Cast</Link>\n                        <Link to='reviews'>Reviews</Link>\n                    </ul>\n                    <Outlet />\n                </div>\n            </> : <b>Sorry, there is no movie.</b>}\n        </>\n    );\n};\n\nexport default MovieDetails;","import axios from 'axios';\nconst API_KEY = '6d25a4756e0ff1ccca3eba13a74efa5c';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'day';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nexport const fetchTrendingToday = async () => {\n  try {\n    const response = await axios.get(`trending/${MEDIA_TYPE}/${TIME_WINDOW}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const ID = Number(movieId);\n    const response = await axios.get(`movie/${ID}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getGenres = async (genres = []) => {\n  try {\n    const response = await axios.get(`genre/${MEDIA_TYPE}/list`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    const genreArray = response.data.genres;\n    const genreResult = genreArray.reduce((previousValue, element) => {\n      if (genres.includes(element.id)) {\n        previousValue.push(element.name);\n      }\n      return previousValue;\n    }, []);\n    return genreResult.join(', ');\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieBySearch = async query => {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getCast","castInfo","console","log","map","id","name","profile_path","character","src","IMG_PATH","alt","loading","movie","setMovie","genres","setGenres","getMovieById","getGenres","genre_ids","getMovie","backdrop_path","title","release_date","vote_average","overview","Object","keys","length","className","slice","Math","round","to","API_KEY","MEDIA_TYPE","axios","fetchTrendingToday","params","api_key","response","data","results","ID","Number","genreArray","genreResult","reduce","previousValue","element","includes","push","join","getReviews","getMovieBySearch","query"],"sourceRoot":""}