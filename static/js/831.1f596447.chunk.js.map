{"version":3,"file":"static/js/831.1f596447.chunk.js","mappings":"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","sources":["components/Box.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/pages/MovieDetails/MovieDetails.jsx","components/pages/MovieDetails/MovieDetails.styled.js","services/getMoviesAndInfo.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography,\n} from 'styled-system';\n\nexport const Box = styled('section')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"Loader\":\"Loader_Loader__wqo9C\"};","import { ThreeDots } from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={styles.Loader}>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"orangered\"\n        ariaLabel=\"three-dots-loading\"\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieById } from 'services/getMoviesAndInfo';\nimport Loader from 'components/Loader';\nimport { AdditionalLink, BackLink, Img } from './MovieDetails.styled';\nimport { Box } from 'components/Box';\n\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkHref =\n    location.state?.from ?? '/movies' + location.state?.search ?? '/movies';\n\n  const Status = {\n    idle: 'IDLE',\n    pending: 'PENDING',\n    resolved: 'RESOLVED',\n    rejected: 'REJECTED',\n  };\n  const { idle, pending, resolved, rejected } = Status;\n\n  const [movie, setMovie] = useState({});\n  const [genres, setGenres] = useState([]);\n  const [status, setStatus] = useState(idle);\n\n  useEffect(() => {\n    (async function getMovie() {\n      try {\n        setStatus(pending);\n        const movieDetails = await getMovieById(movieId);\n        // const genres = movieDetails.genres.map(item => item.name);\n        const genres = movieDetails.genres;\n        const MOVIE_DETAILS_AVAILABLE = Object.keys(movieDetails).length !== 0;\n        if (!MOVIE_DETAILS_AVAILABLE) {\n          setStatus(rejected);\n          return;\n        }\n        setGenres(genres);\n        setMovie(movieDetails);\n        setStatus(resolved);\n      } catch (error) {\n        console.log(error);\n        setStatus(rejected);\n      }\n    })();\n  }, [movie.genre_ids, movieId, pending, rejected, resolved]);\n\n  const { backdrop_path, title, release_date, vote_average, overview } = movie;\n\n  return (\n    <>\n      {status === 'RESOLVED' && (\n        <Box>\n          <Box as=\"div\" p=\"5\">\n            <BackLink to={backLinkHref}>Back to movies</BackLink>\n            <Img src={IMG_PATH + backdrop_path} alt={title} />\n            <Box\n              as=\"h2\"\n              textAlign={'center'}\n              fontSize=\"l\"\n              color=\"orangered\"\n              mb=\"4\"\n            >\n              {title} ({release_date.slice(0, 4)})\n            </Box>\n            <Box as=\"p\" mb=\"4\">\n              Vote - {Math.round(vote_average * 10) / 10}\n            </Box>\n            <Box as=\"h3\" mb=\"3\">\n              Overview\n            </Box>\n            <Box as=\"p\" mb=\"4\">\n              {overview}\n            </Box>\n            <Box as=\"h3\" mb=\"3\">\n              Genres\n            </Box>\n            <Box as=\"ul\" mb=\"4\" color=\"orangered\">\n              {genres.length === 0 ? (\n                <li>No genres for this movie</li>\n              ) : (\n                genres.map(({ name }, indx) => {\n                  return (\n                    <Box as=\"li\" mb=\"3\" key={indx}>\n                      {name}\n                    </Box>\n                  );\n                })\n              )}\n            </Box>\n            <div>\n              <Box\n                as=\"h2\"\n                textAlign={'center'}\n                fontSize=\"l\"\n                color=\"orangered\"\n                mb=\"4\"\n              >\n                Additional information\n              </Box>\n              <Box as=\"ul\" display=\"flex\" mb=\"4\">\n                <li>\n                  <AdditionalLink to=\"cast\" state={backLinkHref}>\n                    Cast\n                  </AdditionalLink>\n                </li>\n                <li>\n                  <AdditionalLink to=\"reviews\" state={backLinkHref}>\n                    Reviews\n                  </AdditionalLink>\n                </li>\n              </Box>\n              <Outlet />\n            </div>\n          </Box>\n        </Box>\n      )}\n      {status === 'PENDING' && <Loader />}\n      {status === 'REJECTED' && (\n        <Box as=\"div\" p=\"4\" display=\"flex\">\n          <BackLink to=\"/\">Go home</BackLink>\n          <Box\n            as=\"b\"\n            textAlign=\"center\"\n            mx=\"auto\"\n            mt=\"5\"\n            fontSize=\"l\"\n            color=\"orangered\"\n          >\n            Sorry, there are no details for the movie.\n          </Box>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Img = styled.img`\n  width: 300px;\n  margin: ${p => p.theme.space[4]}px auto;\n\n  @media screen and (min-width: 768px) {\n    width: 500px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 700px;\n  }\n`;\n\nexport const AdditionalLink = styled(Link)`\n  color: ${p => p.theme.colors.orangered};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.m};\n\n  :first-child {\n    margin-right: ${p => p.theme.space[4]}px;\n  }\n`;\n\nexport const BackLink = styled(Link)`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.accent};\n`;\n","import axios from 'axios';\nconst API_KEY = '6d25a4756e0ff1ccca3eba13a74efa5c';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'day';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nexport const fetchTrendingToday = async () => {\n  try {\n    const response = await axios.get(`trending/${MEDIA_TYPE}/${TIME_WINDOW}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const ID = Number(movieId);\n    const response = await axios.get(`movie/${ID}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// export const getGenres = async (genres = []) => {\n//   try {\n//     const response = await axios.get(`genre/${MEDIA_TYPE}/list`, {\n//       params: {\n//         api_key: API_KEY,\n//       },\n//     });\n//     const genreArray = response.data.genres;\n//     const genreResult = genreArray.reduce((previousValue, element) => {\n//       if (genres.includes(element.id)) {\n//         previousValue.push(element.name);\n//       }\n//       return previousValue;\n//     }, []);\n//     return genreResult.join(', ');\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\nexport const getCast = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieBySearch = async query => {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","shadow","typography","className","styles","height","width","radius","ariaLabel","IMG_PATH","movieId","useParams","location","useLocation","backLinkHref","state","from","search","idle","pending","resolved","rejected","useState","movie","setMovie","genres","setGenres","status","setStatus","useEffect","getMovieById","movieDetails","Object","keys","length","console","log","genre_ids","backdrop_path","title","release_date","vote_average","overview","as","p","to","src","alt","textAlign","fontSize","mb","slice","Math","round","map","indx","name","display","mx","mt","Img","theme","AdditionalLink","Link","colors","orangered","fontWeights","bold","fontSizes","m","BackLink","accent","API_KEY","axios","fetchTrendingToday","params","api_key","response","data","results","ID","Number","getCast","id","cast","getReviews","getMovieBySearch","query"],"sourceRoot":""}